import os
import torch
from PIL import Image
from ultralytics import YOLO

model = YOLO('The best model path')  

test_images_dir = 'The path to the test set image folder'  

output_dir = 'The path to the folder where the results are saved'
os.makedirs(output_dir, exist_ok=True)

result_txt_path = os.path.join(output_dir, 'predictions.txt')

with open(result_txt_path, 'w') as f:
    f.write('')

for img_name in os.listdir(test_images_dir):
    if img_name.lower().endswith(('.png', '.jpg', '.jpeg')):
        img_path = os.path.join(test_images_dir, img_name)

        try:
            results = model(img_path)
        except Exception as e:
            print(f"Predictive pictures {img_name} make a mistake: {e}")
            continue

        img_id = os.path.splitext(img_name)[0]

        img = Image.open(img_path)
        img_width, img_height = img.size

        with open(result_txt_path, 'a') as f:
            for result in results:
                boxes = result.boxes.xywh  
                confidences = result.boxes.conf  
                classes = result.boxes.cls.int()  

                for box, conf, cls in zip(boxes, confidences, classes):
                    x_center_normalized = box[0].item() / img_width
                    y_center_normalized = box[1].item() / img_height
                    width_normalized = box[2].item() / img_width
                    height_normalized = box[3].item() / img_height

                    line = f"{img_id} {cls.item()} {x_center_normalized:.3f} {y_center_normalized:.3f} {width_normalized:.3f} {height_normalized:.3f} {conf.item():.3f}\n"
                    f.write(line)

print(f"All predictions have been saved to {result_txt_path}")
